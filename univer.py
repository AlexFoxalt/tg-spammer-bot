import os
import datetime as dt
import time

import requests
from dotenv import load_dotenv
from scheduler import Scheduler
from google import genai

from logger import logger

load_dotenv()

url = f"https://api.telegram.org/bot{os.environ['UNIVER_BOT_TOKEN']}/sendMessage"
client = genai.Client(api_key=os.environ["GEMINI_API_KEY"])
prompt = """
–¢—ã ‚Äî –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ–¥–Ω–æ–≥–æ –∫—Ä–∞—Ç–∫–æ–≥–æ –≤–µ–∂–ª–∏–≤–æ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –¥–ª—è Telegram-–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é. –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è ‚Äî —Å—Ç—Ä–æ–≥–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å—ë –Ω–∏–∂–µ:

1. –í –æ—Ç–≤–µ—Ç –≤—ã–¥–∞–≤–∞–π **—Ä–æ–≤–Ω–æ –æ–¥–Ω–æ** —Å–æ–æ–±—â–µ–Ω–∏–µ (–æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏–ª–∏ 1‚Äì2 –∫–æ—Ä–æ—Ç–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –∏ **—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è** ‚Äî –±–µ–∑ –∫–∞–≤—ã—á–µ–∫, –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π, –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏, –±–µ–∑ —Å–ø–∏—Å–∫–æ–≤ –∏ –±–µ–∑ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö.
2. –°—Ç–∏–ª—å: –≤–µ–∂–ª–∏–≤–æ, —Ç—ë–ø–ª–æ, —Å–ª–µ–≥–∫–∞ –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ/–ø—Ä–∏–∫–æ–ª—å–Ω–æ; **–Ω–µ–æ—Ñ–∏—Ü–∏–æ–∑–Ω–æ**, –º–æ–∂–Ω–æ —à—É—Ç–∏—Ç—å –∞–∫–∫—É—Ä–∞—Ç–Ω–æ. –≠–º–æ–¥–∑–∏ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é—Ç—Å—è.
3. –î–ª–∏–Ω–∞: –∫–æ—Ä–æ—Ç–∫–æ ‚Äî –Ω–µ –±–æ–ª—å—à–µ 140 —Å–∏–º–≤–æ–ª–æ–≤ (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ), –º–∞–∫—Å–∏–º—É–º 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
4. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ/–Ω—É–∂–Ω–æ –æ–±—ã–≥—Ä—ã–≤–∞—Ç—å, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç **–µ–∂–µ—á–∞—Å–Ω–æ** (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´–µ—â–µ –æ–¥–∏–Ω —á–∞—Å¬ª, ¬´–æ–ø—è—Ç—å —á–∞—Å –ø—Ä–æ–ª–µ—Ç–µ–ª¬ª –∏ —Ç.–ø.), –Ω–æ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–æ ¬´–µ–∂–µ—á–∞—Å–Ω–æ¬ª –¥–æ—Å–ª–æ–≤–Ω–æ.
5. –ò–∑–±–µ–≥–∞—Ç—å —Å–ø–æ—Ä–Ω—ã—Ö —Ç–µ–º (–ø–æ–ª–∏—Ç–∏–∫–∞, —Ä–µ–ª–∏–≥–∏—è, —Å–µ–∫—Å, –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏, –∞–ª–∫–æ–≥–æ–ª—å, –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, –ª–∏—á–Ω—ã–µ –¥–∏–∞–≥–Ω–æ–∑—ã –∏ —Ç.–ø.). –ù–∏–∫–∞–∫–∏—Ö —É–Ω–∏–∂–µ–Ω–∏–π, –¥–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ —É–≥—Ä–æ–∑.
6. –ù–µ —É–ø–æ–º–∏–Ω–∞—Ç—å –∏–º—ë–Ω, –≤—Ä–µ–º—ë–Ω/–¥–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´—Å–µ–π—á–∞—Å¬ª, ¬´—á–µ—Ä–µ–∑ —á–∞—Å¬ª ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã —Ç–∏–ø–∞ ¬´–µ—â–µ –æ–¥–∏–Ω —á–∞—Å¬ª, ¬´–æ–ø—è—Ç—å —á–∞—Å –ø—Ä–æ–ª–µ—Ç–µ–ª¬ª, ¬´–Ω–∞–ø–æ–º–∏–Ω–∞–µ–º¬ª –∏ —Ç.–ø.
7. –ù–µ –≤–∫–ª—é—á–∞—Ç—å —Å—Å—ã–ª–∫–∏, @—É–ø–æ–º–∏–Ω–∞–Ω–∏—è, –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
8. –ö–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ –¥–æ–ª–∂–µ–Ω –¥–∞–≤–∞—Ç—å **–Ω–æ–≤—É—é –≤–∞—Ä–∏–∞—Ü–∏—é** (–Ω–µ —à–∞–±–ª–æ–Ω ¬´–ù–∞–ø–æ–º–∏–Ω–∞–µ–º: –ø—Ä–∏—à–ª–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ¬ª –∫–∞–∂–¥—ã–π —Ä–∞–∑) ‚Äî –º–µ–Ω—è–π —Ñ—Ä–∞–∑—ã, —ç–º–æ–¥–∑–∏, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (–≤–µ–∂–ª–∏–≤–æ, –∏–≥—Ä–∏–≤–æ, –ª—ë–≥–∫–∞—è –≥—Ä—É—Å—Ç—å, –ª—ë–≥–∫–∏–π —Å–∞—Ä–∫–∞–∑–º –±–µ–∑ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥—Ä—É–±–æ—Å—Ç—å).
9. –ï—Å–ª–∏ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∞–≤–∏–ª, –≤–µ—Ä–Ω–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —Ç–æ–∂–µ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç.

–ü—Ä–∏–º–µ—Ä—ã –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –≤—ã—Ö–æ–¥–æ–≤ (–Ω–µ –Ω—É–∂–Ω–æ –∏—Ö –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å):
–ù–æ–≤—ã–π —á–∞—Å ‚Äî –∞ –∑–∞–¥–∞–Ω–∏—è –≤—Å—ë –µ—â—ë –∂–¥—ë–º üòä  
–û–ø—è—Ç—å —á–∞—Å –ø—Ä–æ–ª–µ—Ç–µ–ª ‚Äî –Ω–µ –∑–∞–±—ã–ª–∏ –ø—Ä–æ –Ω–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ? üôè  
–ß–∞—Å–∏–∫ –ø—Ä–æ—à—ë–ª ‚Äî –Ω–µ –ø–æ–¥–∫–∏–Ω–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—á–∏–∫? üìöüôÇ

–ì–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–µ–ø–µ—Ä—å **–æ–¥–Ω–æ** —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏.
"""


def gen_message():
    response = client.models.generate_content(
        model="gemini-2.5-flash-lite", contents=prompt, config={"temperature": 0.75}
    )
    return f"@jukovchief üëã\n{response.text}"


def main():
    now = dt.datetime.now(kyiv_tz)
    if 20 < now.hour or now.hour < 9:
        logger.info(f"Quiet hours (21:00-09:00). Skipping send at {now.isoformat()}")
        return

    logger.info(f"Job started at {now.isoformat()}")

    text = gen_message()
    body = {"chat_id": os.environ["UNIVER_CHAT_ID"], "text": text}
    logger.info(f"Generated message:\n\n{text}")
    response = requests.post(url=url, json=body).json()
    if not response.get("ok", ""):
        raise Exception("Request invalid status")


kyiv_tz = dt.timezone(dt.timedelta(hours=3))
schedule = Scheduler(tzinfo=kyiv_tz)
schedule.hourly(dt.time(minute=0, tzinfo=kyiv_tz), main)


if __name__ == "__main__":
    logger.info(f"Scheduler started at {dt.datetime.now()}")

    while True:
        schedule.exec_jobs()
        time.sleep(1)
