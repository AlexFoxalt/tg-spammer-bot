import os
import datetime as dt
import time

import requests
from dotenv import load_dotenv
from scheduler import Scheduler
from google import genai

from logger import logger

load_dotenv()

url = f"https://api.telegram.org/bot{os.environ['UNIVER_BOT_TOKEN']}/sendMessage"
client = genai.Client(api_key=os.environ["GEMINI_API_KEY"])
prompt = """
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –≤–µ–∂–ª–∏–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ.
–í–æ–∑–≤—Ä–∞—â–∞–π —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è "as is", –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤ –∏–ª–∏ —Ç–µ—Ö.–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

–ü—Ä–∞–≤–∏–ª–∞:
* –¢–æ–Ω –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –º–æ–∂–Ω–æ —Å–ª–µ–≥–∫–∞ —à—É—Ç–ª–∏–≤—ã–π.
* –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è —ç–º–æ–¥–∑–∏ (–Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ).
* –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–ª–∏–Ω–Ω—ã–º.
* –ú–æ–∂–Ω–æ –æ–±—ã–≥—Ä—ã–≤–∞—Ç—å —Ç–æ, —á—Ç–æ –ø—Ä–æ—à—ë–ª –µ—â—ë –æ–¥–∏–Ω —á–∞—Å.
* –ù–∏–∫–∞–∫–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏, —Ä–µ–ª–∏–≥–∏–∏, –≥—Ä—É–±–æ—Å—Ç–µ–π –∏–ª–∏ —Å–ø–æ—Ä–Ω—ã—Ö —Ç–µ–º.
* –°—Ç–∏–ª—å ‚Äî –ª—ë–≥–∫–∏–π, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π, –Ω–æ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π.

–ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:
1. "–ü—Ä–æ—à–µ–ª –µ—â—ë –æ–¥–∏–Ω —á–∞—Å ‚è∞ –ó–∞–¥–∞–Ω–∏–µ –≤—Å—ë –µ—â—ë –∂–¥—ë–º üëÄ"
2. "–ù–æ–≤—ã–π —á–∞—Å –Ω–∞—Å—Ç–∞–ª, –∞ –∑–∞–¥–∞–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç... üòÖ"
3. "–ß–∞—Å –ø—Ä–æ–ª–µ—Ç–µ–ª ‚Äî –∑–∞–¥–∞–Ω–∏—è —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å üïí"

–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 1 –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —ç—Ç–æ–º —Å—Ç–∏–ª–µ.
"""


def gen_message():
    response = client.models.generate_content(
        model="gemini-2.5-flash-lite", contents=prompt, config={"temperature": 1}
    )
    return f"@jukovchief üëã\n{response.text}"


def main():
    now = dt.datetime.now(kyiv_tz)
    if 20 <= now.hour or now.hour < 9:
        logger.info(f"Quiet hours (22:00-09:00). Skipping send at {now.isoformat()}")
        return

    logger.info(f"Job started at {now.isoformat()}")

    text = gen_message()
    body = {"chat_id": os.environ["UNIVER_CHAT_ID"], "text": text}
    logger.info(f"Generated message:\n\n{text}")
    response = requests.post(url=url, json=body).json()
    if not response.get("ok", ""):
        raise Exception("Request invalid status")


kyiv_tz = dt.timezone(dt.timedelta(hours=3))
schedule = Scheduler(tzinfo=kyiv_tz)
schedule.hourly(dt.time(minute=0, tzinfo=kyiv_tz), main)


if __name__ == "__main__":
    logger.info(f"Scheduler started at {dt.datetime.now()}")

    while True:
        schedule.exec_jobs()
        time.sleep(1)
